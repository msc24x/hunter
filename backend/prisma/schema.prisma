generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DB_URL")
}

model competitions {
  id             Int         @id @default(autoincrement())
  host_user_id   Int
  host_user      users       @relation(fields: [host_user_id], references: [id], onDelete: NoAction)
  title          String?     @db.VarChar(120)
  description    String?     @db.VarChar(456)
  created_at     DateTime?    @db.DateTime(0)
  deleted_at     DateTime?    @db.DateTime(0)
  updated_at     DateTime?    @db.DateTime(0)
  rating         Int?        @default(0)
  public         Boolean?
  duration       Int?        @default(0)
  start_schedule String?     @db.VarChar(30)
  scheduled_at   DateTime?    @db.DateTime(0)
  questions      questions[]
}

model files {
  id   Int     @id @default(autoincrement())
  path String? @db.VarChar(224)
}

model questions {
  id             Int          @id @default(autoincrement())
  competition_id Int
  title          String?      @db.VarChar(150)
  statement      String?      @db.VarChar(2048)
  points         Int?         @default(0)
  created_at     DateTime?    @db.DateTime(0)
  deleted_at     DateTime?    @db.DateTime(0)
  sample_cases   String?      @db.VarChar(250)
  sample_sols    String?      @db.VarChar(250)
  competitions   competitions @relation(fields: [competition_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cid")

  @@index([competition_id], map: "fk_cid")
}

model results {
  id             Int   @id @default(autoincrement())
  user_id        Int
  user           users @relation(fields: [user_id], references: [id])
  question_id    Int
  result         Int
  competition_id Int
  penalities     Int?  @default(0)
}

model session {
  id      Int   @id @default(autoincrement())
  user_id Int   @unique
  user    users @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model users {
  id            Int     @id @default(autoincrement())
  email         String? @db.VarChar(330)
  name          String? @db.VarChar(50)
  competitions  competitions[]
  results       results[]
  session       session?
}
